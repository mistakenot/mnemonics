<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="60696094-73eb-4e65-aae9-b66c7b387cb9" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40dbaf01-1011-479f-8791-726724f5dd88" shortcut="M" description="" text="public static $TYPE$ $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;void&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b46d0668-769a-4463-b65a-9209f153ecf9" shortcut="MA" description="" text="public static async Task&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="105608f5-184e-44ee-912c-c9ebde7dbf72" shortcut="MAE" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="443bbfdf-232b-44ef-9eae-fb44ce1aaa4e" shortcut="MAEb" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a813f9b7-4a7b-44fe-8233-ba8eb4472cca" shortcut="MAEby" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66d8febe-66cb-4f5f-9e8f-b833e8ccc846" shortcut="MAEdt" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1142fe08-3175-408e-b4e8-2f75ff5ccc9a" shortcut="MAEf" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30d9ca1a-1024-407a-898f-1825ffa4dfe7" shortcut="MAEg" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1df2784-7dba-474e-93cf-61db3b74b27f" shortcut="MAEi" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0b19c78-358e-4827-8ad4-2e917fc0a735" shortcut="MAEm" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d0585e9-4866-4152-9545-cc53388ed803" shortcut="MAEs" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="985cdbf8-504e-4a7f-bf04-6e4646b0a040" shortcut="MAEt" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed87e6fc-83d7-414b-9a31-d8ca8b684057" shortcut="MAL" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5f98663-a6a0-4413-8ebe-c39cdd09ccc4" shortcut="MALb" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4b9b6e1-a382-4d3d-a164-6e5d563fa4ce" shortcut="MALby" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f10d2baa-4486-4cf9-9a0c-565cda010cb1" shortcut="MALdt" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53fab239-dbd1-4f2e-a3e5-faec48aaa93e" shortcut="MALf" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0315afb5-047e-44ce-9f76-e731dd36137e" shortcut="MALg" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2c6c25a-c758-4794-a046-d2d2e5902e13" shortcut="MALi" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19db99ae-85f7-4001-b42d-2bedf53dfd94" shortcut="MALm" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76c8302b-d4ef-42bb-98e3-91edc36275dd" shortcut="MALs" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5400b133-553f-4c48-9365-53fd7b4739ab" shortcut="MALt" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="213c4437-7f3d-4612-be91-50c77a33c92d" shortcut="MAR" description="" text="public static async Task&lt;$TYPE$[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4c32e13-bc70-4258-a640-6209686368a6" shortcut="MARb" description="" text="public static async Task&lt;bool[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1246883-3fc2-4e80-8ba4-d2587a190e59" shortcut="MARby" description="" text="public static async Task&lt;byte[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c89a514-8dc3-4578-a9e0-9f762857e811" shortcut="MARdt" description="" text="public static async Task&lt;System.DateTime[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb5a2d72-2fde-4572-a75c-ef4d8161dc1b" shortcut="MARf" description="" text="public static async Task&lt;float[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d74773a3-8344-4446-88ed-d76cf857ceb0" shortcut="MARg" description="" text="public static async Task&lt;System.Guid[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d45a73b-a928-41a4-8996-b144b2f5a2f8" shortcut="MARi" description="" text="public static async Task&lt;int[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e9766c2-4d03-44d5-a2c1-18bac13777da" shortcut="MARm" description="" text="public static async Task&lt;decimal[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc922e2d-d9f3-4458-90a3-28083cfcb51a" shortcut="MARs" description="" text="public static async Task&lt;string[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98349fc3-fa8f-4457-885d-ffdf81f17fce" shortcut="MARt" description="" text="public static async Task&lt;System.Threading.Tasks.Task[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19ab457e-a517-4e23-bf5b-5b4a272a902e" shortcut="MAT" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="385b5c0b-7a27-424d-811e-864de52449c7" shortcut="MATb" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e0a0c52-2dc3-4329-9898-20c7725542b1" shortcut="MATby" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f867818d-f044-414f-8a68-7e4ffd412ca1" shortcut="MATdt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6860f0c-0649-4ba8-92d9-c67671a53f41" shortcut="MATf" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="866a63b8-69c0-49a0-80a7-56f5c556afbd" shortcut="MATg" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e37ce8e2-a46e-4f2b-8efd-10e6c53ea0ce" shortcut="MATi" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a09249d-52b5-453e-a5f0-a3c5306265b5" shortcut="MATm" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e6e274d-ab64-4483-a157-9fcfcf454616" shortcut="MATs" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8029f737-d9f8-460d-aa46-6d5ebaa428f7" shortcut="MATt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2aabb422-5ff3-430d-aad0-84eafe8db43b" shortcut="MAb" description="" text="public static async Task&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="832fa663-a5df-4124-be05-9bbb508bc5a7" shortcut="MAby" description="" text="public static async Task&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50e22e2b-b072-417c-882d-97c6ae584113" shortcut="MAdt" description="" text="public static async Task&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cdedbe8-87ad-4ad0-a892-fc2a2e569791" shortcut="MAf" description="" text="public static async Task&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c38f7926-7a4d-4394-b37a-ea73ae440122" shortcut="MAg" description="" text="public static async Task&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60cadfe2-a663-42b2-b6e8-a8783a6bb773" shortcut="MAi" description="" text="public static async Task&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8209d9fd-31e2-4fcb-a08a-de6a267628f5" shortcut="MAm" description="" text="public static async Task&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84cfd019-18e8-4245-b891-2d6f3e2abaff" shortcut="MAs" description="" text="public static async Task&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9967edb-0bae-494e-9f33-44f5843f78c7" shortcut="MAt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e1c3aa0-6520-447f-9dc6-5f3428c40b60" shortcut="ME" description="" text="public static System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4a1801d6-20b7-425a-a881-518694fc5c7e" shortcut="MEb" description="" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c0004b5-59e8-4c56-8711-36d48bceaee2" shortcut="MEby" description="" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b6196e8-5d45-4545-a27c-0bac60abaca4" shortcut="MEdt" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dfe03ba8-3dce-438b-9355-6e8b830a70e1" shortcut="MEf" description="" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6fab8ae5-706a-4fac-b891-82a8946fd482" shortcut="MEg" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af3fafdc-c1c6-4da8-a375-ca389621dbcf" shortcut="MEi" description="" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b67f7774-55e5-4fdf-a73a-a506df8083e2" shortcut="MEm" description="" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1aaeeca-a073-49c5-9685-f12b483e234c" shortcut="MEs" description="" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e076c2fd-c9ef-4515-b00f-3143a9b4f302" shortcut="MEt" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8c0782a-9b3a-4011-a524-eec71f56bed0" shortcut="ML" description="" text="public static System.Collections.Generic.List&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="083bafdc-83f1-41e7-b71c-e8d316008550" shortcut="MLb" description="" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adb8d2f6-aab3-4c9c-851c-4e1daa326b8a" shortcut="MLby" description="" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0acd3863-743d-4638-9039-693b31a1529b" shortcut="MLdt" description="" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8cbe96a-4f7e-4d7f-a1fb-9567038dfe0b" shortcut="MLf" description="" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e600c664-c037-4da2-a76d-338b33b76ace" shortcut="MLg" description="" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5b988bb-dda0-464f-8037-8fba91cdaa83" shortcut="MLi" description="" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea0ed5de-6724-4597-abb0-24e03382347e" shortcut="MLm" description="" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97e0a1ad-5413-46ed-bf72-700cadcf8fed" shortcut="MLs" description="" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c336f94-c995-47cb-bf18-a3298ad488ad" shortcut="MLt" description="" text="public static System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bb9b943-55ea-47d4-b06c-b3241e5ac075" shortcut="MR" description="" text="public static $TYPE$[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da84a1c8-4b50-4109-81e2-417c6182f6a5" shortcut="MRb" description="" text="public static bool[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e13ee1f-16b9-487f-9a51-37f77828da0b" shortcut="MRby" description="" text="public static byte[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a7fd3cd-f795-4fbe-a8da-e98e4ac5530b" shortcut="MRdt" description="" text="public static System.DateTime[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4811d5ba-516b-499d-a76c-c7dc5a30abbd" shortcut="MRf" description="" text="public static float[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f862624-023a-4bde-80a9-4b4ad5123ae8" shortcut="MRg" description="" text="public static System.Guid[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbea77b0-0913-427c-8b83-c6714fe5dfa1" shortcut="MRi" description="" text="public static int[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ca6f223-506b-453b-8fd8-9ffd9dc05d7b" shortcut="MRm" description="" text="public static decimal[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df9dd81f-f0bc-4b19-97b7-028fdb839b76" shortcut="MRs" description="" text="public static string[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="849b2246-1f99-4925-bf5a-8067f6c6fd94" shortcut="MRt" description="" text="public static System.Threading.Tasks.Task[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f2aa2402-3916-4f1f-ad28-7ac29317ddfc" shortcut="MT" description="" text="public static System.Threading.Tasks.Task&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="286fd61e-eed3-46f9-a670-104f02813236" shortcut="MTb" description="" text="public static System.Threading.Tasks.Task&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69081540-797c-4a1c-b92f-0d89f6929eca" shortcut="MTby" description="" text="public static System.Threading.Tasks.Task&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bba2d160-7939-41f7-896f-c36357e0e73c" shortcut="MTdt" description="" text="public static System.Threading.Tasks.Task&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c175b67c-db44-4182-afcb-92f761b19438" shortcut="MTf" description="" text="public static System.Threading.Tasks.Task&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3930198-8460-4245-bbf0-075ad46da5a8" shortcut="MTg" description="" text="public static System.Threading.Tasks.Task&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ec287cd-854a-47e6-94ba-d6fc8cfdcb60" shortcut="MTi" description="" text="public static System.Threading.Tasks.Task&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c088664b-b776-42c3-af9d-8143a3f176ee" shortcut="MTm" description="" text="public static System.Threading.Tasks.Task&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="857fdea5-359a-40db-985c-5818903a8304" shortcut="MTs" description="" text="public static System.Threading.Tasks.Task&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08f62449-e40c-4dd0-be94-ea0ab3a0b5c8" shortcut="MTt" description="" text="public static System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09235ed8-e693-4f7f-a864-b1e85aa05ee5" shortcut="Ma" description="" text="public static async Task $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a236c31e-1ef7-43e8-bf2b-454a3351ffe0" shortcut="Mb" description="" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a72811be-f53f-470e-a580-9c14304de08d" shortcut="Mby" description="" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7d46e0f-ece1-4c01-b741-d26f549ad477" shortcut="Mdt" description="" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe5539e4-bb94-47c9-9b14-e89486a91f6a" shortcut="Mf" description="" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a509379a-8bcf-4f36-a73b-336e7cde36b6" shortcut="Mg" description="" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0693db26-d2d4-4eae-bb2c-ec8eb142791e" shortcut="Mi" description="" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4eeffa9-9940-4c7a-aafd-926aad572583" shortcut="Mm" description="" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf106ab7-7d1b-48d1-9f2b-2409589c0002" shortcut="Ms" description="" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6de08e9-b801-4a2f-a8ba-938b5297a9d3" shortcut="Mt" description="" text="public static System.Threading.Tasks.Task $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97bd0b9f-b96a-4f61-bc97-e309025ee444" shortcut="X" description="" text="public static $TYPE$ $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;void&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="647e2a43-1956-447a-b8ba-b7704d00b70c" shortcut="XA" description="" text="public static async Task&lt;$TYPE$&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89e32440-01be-4467-8dce-aa4ef5727aa5" shortcut="XAE" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;$TYPE$&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9a10973-b280-4de1-8e55-294a363293aa" shortcut="XAEb" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;bool&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c065f0e0-dd66-4551-a2ad-25b2f011b666" shortcut="XAEby" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;byte&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c625ee90-7b5d-432d-a0eb-31032482faa7" shortcut="XAEdt" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd0f3fe6-f88e-497c-87f7-249049d4b80e" shortcut="XAEf" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;float&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d709e63d-6627-4cb8-88b6-8c476621e742" shortcut="XAEg" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Guid&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16179ea0-fbea-4c1a-b3e3-6545e0d68bab" shortcut="XAEi" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;int&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f89db20e-85eb-43ad-a52c-3edb862969fc" shortcut="XAEm" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;decimal&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc1ef38c-6478-412d-a284-351ea07945ec" shortcut="XAEs" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ab92b11-0bbb-40e7-a3e0-5497d90ba2cd" shortcut="XAEt" description="" text="public static async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb21e6f4-a9f3-456e-a6c7-4f46e2af7535" shortcut="XAL" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;$TYPE$&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="766bfe08-60a1-48b4-b462-cc3f0f6803f1" shortcut="XALb" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;bool&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ace43a2-8023-4c34-9ee2-0a6414f25de5" shortcut="XALby" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;byte&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85ece7d6-d434-42f5-89cc-4d1266bfcaca" shortcut="XALdt" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.DateTime&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0ec8d36-ae6f-459f-a71b-2a603c2f15dd" shortcut="XALf" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;float&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72d7e9fd-4a4c-41fa-acf2-c3800371ab0d" shortcut="XALg" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.Guid&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8fd32bd4-24c8-4d06-98b1-61ce35d96a0d" shortcut="XALi" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;int&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dadcd1b2-130e-451f-95b4-ebdc60d82fe2" shortcut="XALm" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;decimal&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df6cc85b-7d9e-4640-8217-ee0057df7e64" shortcut="XALs" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0d39721-ae8a-4dc1-b785-0b7a430dcffb" shortcut="XALt" description="" text="public static async Task&lt;System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c951323-ee61-4bc1-a2e6-e3f9ad6a0e66" shortcut="XAR" description="" text="public static async Task&lt;$TYPE$[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f549e6d-088d-4a85-92d4-4e1994d50333" shortcut="XARb" description="" text="public static async Task&lt;bool[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="517f69cf-46b5-47db-951d-f5a5b7602365" shortcut="XARby" description="" text="public static async Task&lt;byte[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95e76e6a-6d7b-475e-8a0f-01472ea4f7f9" shortcut="XARdt" description="" text="public static async Task&lt;System.DateTime[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed5158f6-52cd-4f6b-aee0-a35fbd159b56" shortcut="XARf" description="" text="public static async Task&lt;float[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec8e8cc9-08ee-4c81-b738-2afc51b28c9d" shortcut="XARg" description="" text="public static async Task&lt;System.Guid[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea58a804-21bf-4389-8862-7f5d61dbd93b" shortcut="XARi" description="" text="public static async Task&lt;int[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="335c22eb-5bde-4591-8861-42c68c55d571" shortcut="XARm" description="" text="public static async Task&lt;decimal[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e034e6c3-5ed2-42a4-a1fa-402b0cdecf43" shortcut="XARs" description="" text="public static async Task&lt;string[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3714081-32a0-48ae-879e-7097ce542b4b" shortcut="XARt" description="" text="public static async Task&lt;System.Threading.Tasks.Task[]&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f4a0a2a-e8cb-4c41-8208-f6dc8c4c3c0c" shortcut="XAT" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;$TYPE$&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a52311dc-6f2f-451c-9739-41e3c84f41b8" shortcut="XATb" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;bool&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58f35159-044b-4256-9c05-1e1396bbd074" shortcut="XATby" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;byte&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3825db4-7075-4467-adfe-f3acc8ff333f" shortcut="XATdt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.DateTime&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3060d299-5a44-4ab4-a409-941d554e7434" shortcut="XATf" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;float&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e67813e-d822-477d-bee8-6007bac942d4" shortcut="XATg" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.Guid&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e6d46e9-a73e-4609-9050-7b6ffe5df15c" shortcut="XATi" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;int&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da0645dc-aa9c-454c-bf26-ee3ce72dc6a6" shortcut="XATm" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;decimal&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2d7b22c-b57a-4ad8-8822-65dc57327a95" shortcut="XATs" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;string&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8274d530-6d52-4141-8567-26c867d4353c" shortcut="XATt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9894fd2c-a681-41ff-bfb5-57154a6ca3be" shortcut="XAb" description="" text="public static async Task&lt;bool&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6bdf9fe-b909-43ae-b401-a81d4ce25aae" shortcut="XAby" description="" text="public static async Task&lt;byte&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57402945-b195-4a61-a947-c97f6d32e9ba" shortcut="XAdt" description="" text="public static async Task&lt;System.DateTime&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="755b8235-74ba-4d35-8280-104ecf29e4eb" shortcut="XAf" description="" text="public static async Task&lt;float&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a89b87e1-6280-4138-a575-b5160f14a6b3" shortcut="XAg" description="" text="public static async Task&lt;System.Guid&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="634dfa8f-8e7f-4887-b8e5-57b1462ab5eb" shortcut="XAi" description="" text="public static async Task&lt;int&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36e549e0-ade2-490e-b366-072a57de380c" shortcut="XAm" description="" text="public static async Task&lt;decimal&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97b4d32e-9505-4600-9d1e-04311a68dedb" shortcut="XAs" description="" text="public static async Task&lt;string&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8969f5f3-8561-4370-bd9a-25d8c197f403" shortcut="XAt" description="" text="public static async Task&lt;System.Threading.Tasks.Task&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc33445a-4137-4f50-90cf-f2ab1b1d7f60" shortcut="XE" description="" text="public static System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19b7a959-2ed5-46e9-a92a-ca3865014191" shortcut="XEb" description="" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="420bf001-3205-4481-90ab-5662cee27724" shortcut="XEby" description="" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="098c2377-128b-4220-8a28-b2feb015dd02" shortcut="XEdt" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19ca3a80-2b25-49bc-9f62-d6e931432c97" shortcut="XEf" description="" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3bd575c1-6989-41ba-a32b-b970da643136" shortcut="XEg" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="16fd556d-bab4-4d0b-9a8e-02df4d21846d" shortcut="XEi" description="" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="699f6ad2-5606-40d1-bbe0-dfb88614b1e1" shortcut="XEm" description="" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c968ffda-af5c-4933-a16c-7391c2c35aa2" shortcut="XEs" description="" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfbfb1d4-a50d-4580-a8ae-046adce24193" shortcut="XEt" description="" text="public static System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0739221b-b1cb-496f-9a7b-4ace98ffd471" shortcut="XL" description="" text="public static System.Collections.Generic.List&lt;$TYPE$&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86d66f63-1bd5-43b9-a585-28084f6f2560" shortcut="XLb" description="" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9968aa0a-b243-4909-962d-b4e22eb1c9ca" shortcut="XLby" description="" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9eed98f-b3f8-43c3-8222-b3828dda5b10" shortcut="XLdt" description="" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3952af14-c0fc-4a09-9e8a-b98af2a91a3b" shortcut="XLf" description="" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5ed7ee9-ff2c-4d23-9087-2060668a0612" shortcut="XLg" description="" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f80cf04a-5af7-4761-bed7-a033cec93516" shortcut="XLi" description="" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49b5be2a-4c0b-4f33-9569-391f1117f533" shortcut="XLm" description="" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b1bf8fa-4c0e-4cee-8c79-52c454caf6cc" shortcut="XLs" description="" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="656d07bc-ae06-48aa-bddf-847ff746ba71" shortcut="XLt" description="" text="public static System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1b34313-51cc-4a18-ac46-5710ee1168b6" shortcut="XR" description="" text="public static $TYPE$[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc133077-b0c7-4443-994d-16bc75fb4a89" shortcut="XRb" description="" text="public static bool[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="873a0304-6b47-45de-aa39-7cc0d046f904" shortcut="XRby" description="" text="public static byte[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="912a207e-358e-41a2-9e73-7f5edf6001c1" shortcut="XRdt" description="" text="public static System.DateTime[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec908402-642a-4c2b-b86a-a5d110f42240" shortcut="XRf" description="" text="public static float[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05598f11-5a96-413e-8a77-6d2a3f269d11" shortcut="XRg" description="" text="public static System.Guid[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5bff960d-feea-41ed-976d-1c071fac83d4" shortcut="XRi" description="" text="public static int[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f079bbcc-cfae-4e10-a794-f0a2964af3dc" shortcut="XRm" description="" text="public static decimal[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f958bfe2-9f72-4e93-80f7-f597181e63cc" shortcut="XRs" description="" text="public static string[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2239ed1-4dcc-4208-a702-385c5259f17b" shortcut="XRt" description="" text="public static System.Threading.Tasks.Task[] $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cbb604e5-a5ac-43d2-a05b-88645e6934ea" shortcut="XT" description="" text="public static System.Threading.Tasks.Task&lt;$TYPE$&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0d3490e-c975-4f66-827d-7331f5364d6c" shortcut="XTb" description="" text="public static System.Threading.Tasks.Task&lt;bool&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3c9bc71-3aca-4191-8bad-2248b7602c56" shortcut="XTby" description="" text="public static System.Threading.Tasks.Task&lt;byte&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="964093ca-841f-4fe5-bdd5-a35a05f38eb9" shortcut="XTdt" description="" text="public static System.Threading.Tasks.Task&lt;System.DateTime&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95fb80ba-7215-4584-b9b7-97eca4fb1e19" shortcut="XTf" description="" text="public static System.Threading.Tasks.Task&lt;float&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="010f444d-f393-4b00-848f-1757a599de2c" shortcut="XTg" description="" text="public static System.Threading.Tasks.Task&lt;System.Guid&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="99e5854e-1822-4b71-93fd-1db573a88d03" shortcut="XTi" description="" text="public static System.Threading.Tasks.Task&lt;int&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d998df2-9f8d-46a7-bbb2-da1e6e869dca" shortcut="XTm" description="" text="public static System.Threading.Tasks.Task&lt;decimal&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1f2db647-a81c-4e0d-8bde-4c1f4dd7328e" shortcut="XTs" description="" text="public static System.Threading.Tasks.Task&lt;string&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="641ee929-e0e4-4a23-b108-9d5879ceb322" shortcut="XTt" description="" text="public static System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7448a9c6-fafa-447f-a05b-3456782f3719" shortcut="Xa" description="" text="public static async Task $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="841cb8b9-fae7-4a4f-a691-766ed0b96bc4" shortcut="Xb" description="" text="public static bool $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d068e97-b015-4478-bc9d-1d5a8df462c7" shortcut="Xby" description="" text="public static byte $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="799c57bc-4a33-4637-92fb-6c4e4c204ae4" shortcut="Xdt" description="" text="public static System.DateTime $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="276f0cf2-2745-4cb4-9f79-269c2d7cdda6" shortcut="Xf" description="" text="public static float $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53c38cb9-156a-4bac-968a-6523e50e1784" shortcut="Xg" description="" text="public static System.Guid $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="61243e55-8f08-4d8e-be2b-d42c98b91f27" shortcut="Xi" description="" text="public static int $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddc7ea04-22b8-43fa-af20-0116a98a92e5" shortcut="Xm" description="" text="public static decimal $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="addd2f10-553e-4a1e-bb23-33fbce53533b" shortcut="Xs" description="" text="public static string $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dfbad9e3-efca-4574-9602-bf732eb82e43" shortcut="Xt" description="" text="public static System.Threading.Tasks.Task $methodname$(this $PTYPE$ value){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
      <Variable name="PTYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="784197d6-852e-4ddf-bfc6-16a53eadf45b" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9387061c-88d9-4308-b4be-61177b3247da" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="360f64fa-554b-4214-822a-f44abe94d774" shortcut="e" description="" text="public enum $CLASSNAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac5a7358-66c7-480e-ba72-d786ac1df851" shortcut="i" description="" text="public interface I$INTERFACENAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;MyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b68e8109-d14b-4adc-ab18-22a12eb1fc3b" shortcut="m" description="" text="public $TYPE$ $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;void&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b238f64c-8c2f-4760-b997-1c15e5ea5a38" shortcut="mA" description="" text="public async Task&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8d21e82-6371-4883-bc3d-c0a3ecc6ab1a" shortcut="mAE" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63425c54-2379-448c-b367-a4a31d9d8998" shortcut="mAEb" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86365bb3-2834-42e5-b4c6-188a0058519d" shortcut="mAEby" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="448462ca-9d6d-4528-85ee-32609efc2d23" shortcut="mAEdt" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d846f018-c254-45ee-a757-717049a2a8c6" shortcut="mAEf" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="498b9e78-6ddb-481f-801e-791497eaf112" shortcut="mAEg" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00040cfe-8b85-40e0-b0b2-95e0022b316c" shortcut="mAEi" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87077e9a-48fd-46c2-b16a-8e4437a820d3" shortcut="mAEm" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09ad21ff-a68d-46f8-a829-41ad34233206" shortcut="mAEs" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d3bca06-cba2-4f1d-a6ab-a9544f2181c8" shortcut="mAEt" description="" text="public async Task&lt;System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ecf1b46-e5c2-40d4-bf1d-fde3e0aaaead" shortcut="mAL" description="" text="public async Task&lt;System.Collections.Generic.List&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="537e2094-2846-443a-878a-2461ec9103d8" shortcut="mALb" description="" text="public async Task&lt;System.Collections.Generic.List&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ade09b8f-9f0f-4436-8a0f-69ab1a034922" shortcut="mALby" description="" text="public async Task&lt;System.Collections.Generic.List&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="986873c5-7b3a-4586-85fe-3f630a80d5de" shortcut="mALdt" description="" text="public async Task&lt;System.Collections.Generic.List&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05a95ab0-f285-4582-b018-18f3d84054d5" shortcut="mALf" description="" text="public async Task&lt;System.Collections.Generic.List&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ead11873-0bf2-4d4e-90c2-1a3b0913a1cc" shortcut="mALg" description="" text="public async Task&lt;System.Collections.Generic.List&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92cc00b2-3cad-4a7f-9d47-b87236282ece" shortcut="mALi" description="" text="public async Task&lt;System.Collections.Generic.List&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6edf44c6-187f-43d3-a0d1-8a061b4ba742" shortcut="mALm" description="" text="public async Task&lt;System.Collections.Generic.List&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e912a534-a7c4-40d6-896d-83b4ac3452d8" shortcut="mALs" description="" text="public async Task&lt;System.Collections.Generic.List&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8ec9dc4-4d9b-4ab0-903f-29be4523ae9d" shortcut="mALt" description="" text="public async Task&lt;System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd866115-bc84-4523-b570-3dea675ed58a" shortcut="mAR" description="" text="public async Task&lt;$TYPE$[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb382844-065b-457a-b4a1-4d0531c9fe1e" shortcut="mARb" description="" text="public async Task&lt;bool[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e73712d-98d3-4501-862c-ccc24a6021f2" shortcut="mARby" description="" text="public async Task&lt;byte[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7f78ea36-b38d-414c-9714-41a3ebffa0e2" shortcut="mARdt" description="" text="public async Task&lt;System.DateTime[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="251cc5da-4fcb-45b8-9c4b-af13543cc6da" shortcut="mARf" description="" text="public async Task&lt;float[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae2bf7bf-6f1b-4f4d-8d05-95a0a36182e5" shortcut="mARg" description="" text="public async Task&lt;System.Guid[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec8a17dc-cec5-48a8-9a96-5084ad92f584" shortcut="mARi" description="" text="public async Task&lt;int[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb39347f-3498-40bb-9779-9938e6ba9831" shortcut="mARm" description="" text="public async Task&lt;decimal[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="385d92ca-b545-43d1-a6fe-dc814c030a6d" shortcut="mARs" description="" text="public async Task&lt;string[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="828ccc63-f8be-4987-b876-cb7a111fb67b" shortcut="mARt" description="" text="public async Task&lt;System.Threading.Tasks.Task[]&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63441fad-7926-4c76-abd8-d9ae2d68d89a" shortcut="mAT" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;$TYPE$&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a2ed54c-c92b-4793-8958-66a3a7a7a142" shortcut="mATb" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;bool&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4393ba5-9580-4b52-adfc-8d6bf3d6fee9" shortcut="mATby" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;byte&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7f41767-bfa9-40ac-a867-7e9693db2290" shortcut="mATdt" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;System.DateTime&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="899747f1-f020-40e6-b07b-4cd16e462b16" shortcut="mATf" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;float&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e40f9840-73a6-4358-8785-ddaefde1641d" shortcut="mATg" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;System.Guid&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad0ff2e4-a830-48c0-a8ba-aab9565e7289" shortcut="mATi" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;int&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c58633b-18ca-48a8-a81d-5a96ad0f05ee" shortcut="mATm" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;decimal&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df18e3b1-379e-4003-97f7-ff67e284c310" shortcut="mATs" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;string&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65bf2298-f326-4eaa-a5d7-d02551774648" shortcut="mATt" description="" text="public async Task&lt;System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66c51c38-4c24-4d69-a6ec-455e5bb84124" shortcut="mAb" description="" text="public async Task&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74c247e2-5df1-4c65-9930-c8443e59367f" shortcut="mAby" description="" text="public async Task&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0abad64-293c-4dc1-86ec-24aab28655bd" shortcut="mAdt" description="" text="public async Task&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b072a065-c742-4124-a858-0f3c61f1e65b" shortcut="mAf" description="" text="public async Task&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51abe4ff-62f8-497e-a49b-805d49d99813" shortcut="mAg" description="" text="public async Task&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da2a4682-ef2e-4b5d-8370-ae8cc8af7afe" shortcut="mAi" description="" text="public async Task&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f42462bf-0a69-4228-8a21-e43c6892dd9e" shortcut="mAm" description="" text="public async Task&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30466517-5d36-4ce9-828d-680f373f189b" shortcut="mAs" description="" text="public async Task&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6486272-f5f4-4050-9e46-2569890cb2b9" shortcut="mAt" description="" text="public async Task&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41ec8abe-30c0-4127-822d-611bf3081d78" shortcut="mE" description="" text="public System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b4f4d25-33c0-4ab0-a4ee-36a22fb5bee5" shortcut="mEb" description="" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ac6316f-7b2e-4ca1-85fa-5db531598904" shortcut="mEby" description="" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bcec700f-d920-4c8b-8ec8-232b4d6573e3" shortcut="mEdt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c90be091-31b7-47b8-b47b-a5aafc338aa6" shortcut="mEf" description="" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbac535b-bede-4400-80b8-f0556eeaa082" shortcut="mEg" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5fae320-6e79-46ef-84b7-d6818240070b" shortcut="mEi" description="" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7727090-05d7-47b4-b304-b691d7a964d3" shortcut="mEm" description="" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed9e1fea-fd23-41a3-bb6a-e12fc8ca66c0" shortcut="mEs" description="" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="101c4d27-8cea-4032-bae7-5c9c729ace97" shortcut="mEt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8e9e17c-221d-4dd8-9467-d19987265585" shortcut="mL" description="" text="public System.Collections.Generic.List&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d42d7e84-8cc6-40fd-bffe-9e8c341ee8a3" shortcut="mLb" description="" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f580a425-6091-44c1-a15c-273332fc8bb9" shortcut="mLby" description="" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3b6dd14-2cbf-4d4c-acb1-83c6bae5d762" shortcut="mLdt" description="" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2deb72c5-fe1b-4019-aa61-2c3cc386a712" shortcut="mLf" description="" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3b80c6ed-025b-4af0-a0fb-0fe8e831b7a9" shortcut="mLg" description="" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c40fbbe-bcb8-4d6b-9712-d70105f84b37" shortcut="mLi" description="" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d63eaca1-ae53-4353-80a4-9de95064f5bc" shortcut="mLm" description="" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1eba5973-55c9-4427-813e-16241cdbb964" shortcut="mLs" description="" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19428d36-9229-47a6-9f31-d4173e376d71" shortcut="mLt" description="" text="public System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b007421a-2d91-4b33-a543-8ebdb9e5748a" shortcut="mR" description="" text="public $TYPE$[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e064270f-8add-448a-b71f-84bba2a15b9b" shortcut="mRb" description="" text="public bool[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bab19252-a010-4695-b11b-e1321c04b2f2" shortcut="mRby" description="" text="public byte[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b05609e1-19c5-4aac-b15b-b7966d335373" shortcut="mRdt" description="" text="public System.DateTime[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8f068ab-87e3-4800-b86a-c73428e54813" shortcut="mRf" description="" text="public float[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dea8645-098c-49b6-a98c-314b690924b0" shortcut="mRg" description="" text="public System.Guid[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="048cb43f-cc3f-4057-a7ea-2201b873ba77" shortcut="mRi" description="" text="public int[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44d9a062-053e-4fe4-b6ad-630139ae40ba" shortcut="mRm" description="" text="public decimal[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b2b5044-fe57-4cc8-a4e9-aa19efd25f3c" shortcut="mRs" description="" text="public string[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="845f37c0-4e0e-4762-a5ce-57bad773072b" shortcut="mRt" description="" text="public System.Threading.Tasks.Task[] $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02b70de0-bc82-4faa-bd8a-b3eb509c0ce9" shortcut="mT" description="" text="public System.Threading.Tasks.Task&lt;$TYPE$&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78bcf9da-4dbd-48a9-aa8f-00987c3b2888" shortcut="mTb" description="" text="public System.Threading.Tasks.Task&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d1cd84c-9719-430f-887f-9bb0b214ad50" shortcut="mTby" description="" text="public System.Threading.Tasks.Task&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e42465b-9424-4345-94f0-7c0f68491908" shortcut="mTdt" description="" text="public System.Threading.Tasks.Task&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0962cee2-5be7-4dbc-9c3e-0213261a57ff" shortcut="mTf" description="" text="public System.Threading.Tasks.Task&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa171dd8-2e13-4d0a-8115-fef4f4fb846d" shortcut="mTg" description="" text="public System.Threading.Tasks.Task&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e287631c-b3af-443c-a66a-24173813e571" shortcut="mTi" description="" text="public System.Threading.Tasks.Task&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="615764a4-2d69-45fa-85f8-3f378f442a24" shortcut="mTm" description="" text="public System.Threading.Tasks.Task&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ef9d551-b6ac-42cd-ab1d-b2b2956c9841" shortcut="mTs" description="" text="public System.Threading.Tasks.Task&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a114b9d2-5041-49da-b787-914a73d5ef78" shortcut="mTt" description="" text="public System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72ecb467-8254-47ff-b398-ad75cff721cc" shortcut="ma" description="" text="public async Task $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8847d04-71a6-43b8-9708-e3b13041aba9" shortcut="mb" description="" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6402def2-b5a2-40e8-a08c-b92158036168" shortcut="mby" description="" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3880a33c-645b-427b-aabb-da2bcb3c1e3d" shortcut="mdt" description="" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55be861c-b7f0-48da-9ab3-894b1c55a5ce" shortcut="mf" description="" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9dc88250-38c9-449b-ad24-344e5f0fcd91" shortcut="mg" description="" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa169991-d998-498e-a93f-9f51ee9c671b" shortcut="mi" description="" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="361180ec-332b-43ea-972d-18a281c5357c" shortcut="mm" description="" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="486b8e65-d004-4bbf-ab59-ca2bf01098ae" shortcut="ms" description="" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fbd9313-6b38-4ee3-80bd-8c67c633c0ed" shortcut="mt" description="" text="public System.Threading.Tasks.Task $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21307cc2-4c38-41b7-bb94-7f00dd0e3e05" shortcut="p" description="" text="public $TYPE$ $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3df2097-ab8e-46bb-918f-0097b3086b39" shortcut="pE" description="" text="public System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf78a388-35ef-4ba3-b1d3-18e34d4428fe" shortcut="pEb" description="" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46f5aad6-7445-497e-8f3a-3de9a9e43d13" shortcut="pEby" description="" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92639113-1126-4f48-ae7c-1536819f32f2" shortcut="pEdt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70066555-7f48-4dec-9ef5-009ef202d2a9" shortcut="pEf" description="" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32889534-1603-481b-9545-aba07c28208a" shortcut="pEg" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3317beda-f022-4bec-9146-78ce526f1871" shortcut="pEi" description="" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ebce11b-de66-47da-b6e1-c85ba4185bac" shortcut="pEm" description="" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef003d19-9deb-47ca-8912-8003a696e078" shortcut="pEs" description="" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="702a171f-74a3-4903-b49c-af04d8ea0ab1" shortcut="pEt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="984daa7d-8796-479f-9274-f33b5bb8cfcf" shortcut="pL" description="" text="public System.Collections.Generic.List&lt;$TYPE$&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4d0cd04-5067-44ef-b255-85b5fa133634" shortcut="pLb" description="" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9783347d-bdc4-4a33-8b34-e07579fcaefc" shortcut="pLby" description="" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0fa3bff-a8f5-411a-acf0-487b4ba9c648" shortcut="pLdt" description="" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9007e315-01e2-4eef-b7b7-e47d85a177ca" shortcut="pLf" description="" text="public System.Collections.Generic.List&lt;float&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94b507b2-5048-4b56-a703-23c94e7e9341" shortcut="pLg" description="" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fcd48b54-fae6-4cf8-9801-b7e9e08032fa" shortcut="pLi" description="" text="public System.Collections.Generic.List&lt;int&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2b1fb28-c45a-4043-ab03-1324dd279675" shortcut="pLm" description="" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5892a8a9-9ec2-472e-8006-7299bfa6f731" shortcut="pLs" description="" text="public System.Collections.Generic.List&lt;string&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3814511b-b782-4c6f-b2b8-ce4affa3c9ae" shortcut="pLt" description="" text="public System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d32bbc54-2ff9-4e7b-ae78-63a787366c94" shortcut="pR" description="" text="public $TYPE$[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4d59776-e573-4eaf-830b-c5b277988fc6" shortcut="pRb" description="" text="public bool[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1800e234-1ecf-4c24-8bf3-9ea5ed04636a" shortcut="pRby" description="" text="public byte[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="debaafd6-bbef-441c-8b1f-61635e2d9cfb" shortcut="pRdt" description="" text="public System.DateTime[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="592010d8-c509-493d-9cee-9fface010f65" shortcut="pRf" description="" text="public float[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f9bc641c-32c1-45f8-be10-a2cf09e866b2" shortcut="pRg" description="" text="public System.Guid[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7bacae5-9aa7-4d34-972f-8d255e2f30c5" shortcut="pRi" description="" text="public int[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b35dc8e2-639e-40e5-a22f-8463c95d71be" shortcut="pRm" description="" text="public decimal[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="519666b9-7e34-4f05-b08a-b385100bf9ac" shortcut="pRs" description="" text="public string[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1fb8d14-2a38-4672-9f37-865e42105286" shortcut="pRt" description="" text="public System.Threading.Tasks.Task[] $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fc188e2-255a-4bae-970e-72a6aae0f0ce" shortcut="pT" description="" text="public System.Threading.Tasks.Task&lt;$TYPE$&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4947b4ae-0246-4cb9-88df-620c2c684062" shortcut="pTb" description="" text="public System.Threading.Tasks.Task&lt;bool&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85662084-1ca7-4c1d-b3a4-fbe10114002f" shortcut="pTby" description="" text="public System.Threading.Tasks.Task&lt;byte&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e26cd0c-5368-4198-99e3-6149a5cfb704" shortcut="pTdt" description="" text="public System.Threading.Tasks.Task&lt;System.DateTime&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f17fd628-78f9-4bca-81e3-b865ed000b62" shortcut="pTf" description="" text="public System.Threading.Tasks.Task&lt;float&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b166859a-bfa2-4141-aa61-b7569c0cd8c0" shortcut="pTg" description="" text="public System.Threading.Tasks.Task&lt;System.Guid&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="043ecc68-3587-463c-b742-a02bddb12513" shortcut="pTi" description="" text="public System.Threading.Tasks.Task&lt;int&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2b18b5a-f9e1-4d18-92fb-00a639c98e4d" shortcut="pTm" description="" text="public System.Threading.Tasks.Task&lt;decimal&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="565c364e-0dd1-4bee-9987-3d4e32323940" shortcut="pTs" description="" text="public System.Threading.Tasks.Task&lt;string&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c94e98bb-852a-4fbc-a3f5-d9852d2b9f4c" shortcut="pTt" description="" text="public System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abbc73d9-95b2-4718-a3c5-fb8a644c6e4a" shortcut="pb" description="" text="public bool $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="03697346-11f6-499f-8a88-1e73b59c354a" shortcut="pby" description="" text="public byte $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60f4c76f-2cb7-42e2-9436-9fd6906f0b7c" shortcut="pdt" description="" text="public System.DateTime $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74cd99c5-efa7-412b-881d-c7ea63f3d017" shortcut="pf" description="" text="public float $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20fff300-a40b-4828-949d-f3b0422c7b02" shortcut="pg" description="" text="public System.Guid $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b742a5e-f242-4fdd-88d4-c03fca8bd6ee" shortcut="pi" description="" text="public int $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5f343f5-f7e3-4473-96c3-870011f8169e" shortcut="pm" description="" text="public decimal $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d860f029-ae2c-408b-ad5f-fee38471a474" shortcut="pr" description="" text="public $TYPE$ $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8cdf651-1f18-4e8f-8fd6-3fda3a48b320" shortcut="prE" description="" text="public System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="329fc4c1-80ae-4447-a333-67d6d0876824" shortcut="prEb" description="" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="801c2f66-6ee6-4c0c-8888-960836c14d20" shortcut="prEby" description="" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="43e8740e-5120-49bd-9fa9-c7a728232b17" shortcut="prEdt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="590b6fea-5d85-4ce0-8d56-5050bcb94bab" shortcut="prEf" description="" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7888d976-167e-4394-a26b-86fb02a993c4" shortcut="prEg" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="417e6838-b458-4113-b739-217ada912677" shortcut="prEi" description="" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d9dd84f-7701-418e-8b1c-f94b683dea2f" shortcut="prEm" description="" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80a15fa5-8a88-475d-a3e9-46e465413496" shortcut="prEs" description="" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3cb79bc-e9f7-4abe-bd5c-3a148ff25bf8" shortcut="prEt" description="" text="public System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12265413-fd98-4ee2-9689-d9036d9442b0" shortcut="prL" description="" text="public System.Collections.Generic.List&lt;$TYPE$&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f11a5f2f-ed08-4587-af92-f8a16b55338a" shortcut="prLb" description="" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14910429-acbc-494a-84c6-99594d627130" shortcut="prLby" description="" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0add33c0-4a39-4902-bcf7-a9438780ca9a" shortcut="prLdt" description="" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="497f0fa1-4ddb-493c-8150-2ab03cdb4f2c" shortcut="prLf" description="" text="public System.Collections.Generic.List&lt;float&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f091444e-3309-41ff-9b37-eee7a8810b5b" shortcut="prLg" description="" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="29083bc5-234d-4ab4-843b-87374966e0e0" shortcut="prLi" description="" text="public System.Collections.Generic.List&lt;int&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8109377c-07fb-439a-83a2-8a7913b74cc1" shortcut="prLm" description="" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6aa4f29-2b00-4d4c-b7f7-35215deae504" shortcut="prLs" description="" text="public System.Collections.Generic.List&lt;string&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b509235-aa9d-498a-8e77-38de77079ddc" shortcut="prLt" description="" text="public System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f2e0a97-8536-4533-b71e-d721dd890918" shortcut="prR" description="" text="public $TYPE$[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14954927-5ffe-4580-a26d-2f0bcefeb420" shortcut="prRb" description="" text="public bool[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37df1f7e-7233-4f82-bcad-59eccb6fb332" shortcut="prRby" description="" text="public byte[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd0cc80f-04ea-4fe1-8465-27529f0a79ca" shortcut="prRdt" description="" text="public System.DateTime[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="255f7114-494e-4d3b-91de-93795a3ea522" shortcut="prRf" description="" text="public float[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ea083a8-cf2d-4f2b-81db-4b36aebb2bbc" shortcut="prRg" description="" text="public System.Guid[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab0351ff-fc74-4d00-9786-4945a06a2e5b" shortcut="prRi" description="" text="public int[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42e08539-a36d-48e0-8c51-f0d1dad30970" shortcut="prRm" description="" text="public decimal[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65c14a18-4465-471c-a235-48cb2720b124" shortcut="prRs" description="" text="public string[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40d78793-2e70-446e-a7ca-b7f9e93d13a8" shortcut="prRt" description="" text="public System.Threading.Tasks.Task[] $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57bf52fd-0a08-4266-88ec-e00ac7bbf6a4" shortcut="prT" description="" text="public System.Threading.Tasks.Task&lt;$TYPE$&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="015633e4-3769-4ecf-bff8-5eba5d897509" shortcut="prTb" description="" text="public System.Threading.Tasks.Task&lt;bool&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="957f16cb-e8fb-4f9d-a4f7-8a67db84f8f6" shortcut="prTby" description="" text="public System.Threading.Tasks.Task&lt;byte&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5ca6069-fd16-4c95-92d1-e6cc640faede" shortcut="prTdt" description="" text="public System.Threading.Tasks.Task&lt;System.DateTime&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06aecb42-ea60-436e-9a84-88e4b91f396e" shortcut="prTf" description="" text="public System.Threading.Tasks.Task&lt;float&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b734b5b1-3759-4a89-af06-9424fb2c8116" shortcut="prTg" description="" text="public System.Threading.Tasks.Task&lt;System.Guid&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd3061bc-67c4-4263-b136-d6d088729353" shortcut="prTi" description="" text="public System.Threading.Tasks.Task&lt;int&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89b9d4da-5cf3-4093-b5a0-8ad30762b715" shortcut="prTm" description="" text="public System.Threading.Tasks.Task&lt;decimal&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f159737c-1418-42c3-b340-f518a22e87af" shortcut="prTs" description="" text="public System.Threading.Tasks.Task&lt;string&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cd060c1-ea18-45c4-9fd3-ba1c558d2eac" shortcut="prTt" description="" text="public System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d023978d-3112-4c84-9cb8-970933ac438d" shortcut="prb" description="" text="public bool $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf08a62a-f7ee-4aa2-ae20-618fc67853ad" shortcut="prby" description="" text="public byte $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ccfed48-9e5c-4961-9d06-24bb855d9a1d" shortcut="prdt" description="" text="public System.DateTime $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7df4dfa1-2ef0-4109-b39f-d2ef8289b0af" shortcut="prf" description="" text="public float $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89173a0b-7417-4536-ba83-feac444256e0" shortcut="prg" description="" text="public System.Guid $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e957282-c3f2-463b-a67d-f4fad02dd58d" shortcut="pri" description="" text="public int $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ad5bf89-89cc-44f1-b924-3f940b71dad4" shortcut="prm" description="" text="public decimal $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4617fac6-e287-4faa-b487-243d0bcdcab7" shortcut="prs" description="" text="public string $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b730d89e-786a-4c5a-aafa-e8ccdfab8e3f" shortcut="prt" description="" text="public System.Threading.Tasks.Task $propname${get;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="838c50b0-2021-4679-8d3e-2b9fad554dea" shortcut="ps" description="" text="public string $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4c208fc-b5f9-45ac-ab81-36556fc4ad65" shortcut="pt" description="" text="public System.Threading.Tasks.Task $propname${get; set;}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa4b7a7f-eb3e-46e9-a71b-431b461b2939" shortcut="s" description="" text="public struct $CLASSNAME${$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="141e2f6a-c3f6-4eb9-9cf0-0349135adfd4" shortcut="v" description="" text="private $TYPE$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9351f98c-7f26-454b-8757-3077797a9e8b" shortcut="vE" description="" text="private System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="796dfe15-56c6-4497-9f96-6e463a52f2e5" shortcut="vEb" description="" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee9cfdfe-d418-4b93-bfcb-cc93785bc342" shortcut="vEby" description="" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a2c8f7b-4ad4-447b-9169-071b328d4f50" shortcut="vEdt" description="" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca0163c8-8715-4063-aec0-764bd901b390" shortcut="vEf" description="" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="142c326f-00e2-4ddf-a01c-0837b3a864ad" shortcut="vEg" description="" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebb6c119-062f-4bc9-a2f4-4a6716e4f05e" shortcut="vEi" description="" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46013a6c-8bfa-4c9d-bff5-5c1411255fab" shortcut="vEm" description="" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d927e7ce-0bc9-4562-be87-de66347f7581" shortcut="vEs" description="" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17df98c3-d9e9-476b-a9ab-49f756755018" shortcut="vEt" description="" text="private System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2948d8c2-f7e0-4e88-a4c5-d96d1f5c31f8" shortcut="vL" description="" text="private System.Collections.Generic.List&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d71e8b6-4d92-4ff5-86e2-e9c0fc9bec18" shortcut="vLb" description="" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="456cb491-ba8f-4630-8e27-d33d0565edc9" shortcut="vLby" description="" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bfb5c6f-6209-4686-8859-3063a05f5ff7" shortcut="vLdt" description="" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1615e1b2-1551-4ca8-a500-898bea8320c2" shortcut="vLf" description="" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d017d3ad-6fe3-43c0-a6d5-6ae270abe04f" shortcut="vLg" description="" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca1d599e-55ac-4dbd-b404-9b191029453f" shortcut="vLi" description="" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef1ff51d-e3d1-4c7c-8872-ef4205a96d48" shortcut="vLm" description="" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0640d02-af8e-45dc-bf4a-37253a27967e" shortcut="vLs" description="" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0404276a-ee23-42d7-ab26-8c388e118529" shortcut="vLt" description="" text="private System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="545d4f74-2422-4724-a935-83d13e6e8c03" shortcut="vR" description="" text="private $TYPE$[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1010b0f-3d22-4b20-bf7c-6865853e7117" shortcut="vRb" description="" text="private bool[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="751fac0a-96fa-4df9-a1ee-bca038033a2f" shortcut="vRby" description="" text="private byte[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97ce1d6f-4104-49a0-a626-35921b12cfa0" shortcut="vRdt" description="" text="private System.DateTime[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02474bb9-c801-4a66-8d11-06ae612c1a4e" shortcut="vRf" description="" text="private float[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4ef426d-9830-4e2d-b3ed-07c82a62c65d" shortcut="vRg" description="" text="private System.Guid[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f91735da-f23a-4ab6-a30e-d4d3078a26dd" shortcut="vRi" description="" text="private int[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46910749-8c43-458b-977e-08456ee0c2e6" shortcut="vRm" description="" text="private decimal[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb304e1e-7e40-49d6-94a3-dc27f76930c6" shortcut="vRs" description="" text="private string[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="931037ad-5e5e-4922-917c-576942b83cf2" shortcut="vRt" description="" text="private System.Threading.Tasks.Task[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e16b1180-e863-42f4-b0da-79adc9225e50" shortcut="vT" description="" text="private System.Threading.Tasks.Task&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa8875c1-7975-4ffa-b6c3-87fa2de76820" shortcut="vTb" description="" text="private System.Threading.Tasks.Task&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e369014c-e983-473f-92da-6ed80b0970f4" shortcut="vTby" description="" text="private System.Threading.Tasks.Task&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9efd9ac0-a1bb-4d74-afe1-e6de8bd004d4" shortcut="vTdt" description="" text="private System.Threading.Tasks.Task&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="17b9ad77-8758-445a-a0d7-7a6aaedc45e1" shortcut="vTf" description="" text="private System.Threading.Tasks.Task&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb637c9b-9494-4e5e-a039-1299adaf15ac" shortcut="vTg" description="" text="private System.Threading.Tasks.Task&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84aaad57-3202-43d6-9d8a-c24b35dbe97c" shortcut="vTi" description="" text="private System.Threading.Tasks.Task&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72aa8fbc-4353-4392-a1f2-13b058a06832" shortcut="vTm" description="" text="private System.Threading.Tasks.Task&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6eb83563-36ef-4223-8bdd-def3cafaa7ed" shortcut="vTs" description="" text="private System.Threading.Tasks.Task&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ef5e928-f2e4-482c-8b3f-819419a34692" shortcut="vTt" description="" text="private System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6eca753-f0aa-46a4-8b50-a2f00c3f9ec0" shortcut="vb" description="" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fcac5a2-57ec-42c3-b62b-1fa9d02f70ba" shortcut="vby" description="" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93eb206d-94eb-40d7-994a-eef79697475b" shortcut="vdt" description="" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1711844-d1a0-4e87-a753-afb25811f934" shortcut="vf" description="" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6188ea3-1d51-4c33-bb46-4b8c101e878d" shortcut="vg" description="" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bc7f95e5-b171-43d3-af63-41b7bf95f360" shortcut="vi" description="" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5649e89b-497c-4636-923e-ec11d9789f5d" shortcut="vm" description="" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb8ee5f5-a1a4-4fd9-809d-b70999e0c5e4" shortcut="vr" description="" text="private readonly $TYPE$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a3877b63-2926-4bbf-89cf-ebff4d6c2809" shortcut="vrE" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="549ec281-e4ea-4109-824c-eca68f5d7caa" shortcut="vrEb" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c59dfc9-3c2a-4340-bdb3-cca01ec3614c" shortcut="vrEby" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d9d376a-7c8d-4812-8bd8-c1094db7ba61" shortcut="vrEdt" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f616c8b8-61e1-4d75-aa57-832cf5b7b1e1" shortcut="vrEf" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="916b46fb-7ab0-4ac8-9a75-3e4f5d58641f" shortcut="vrEg" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81ba74c9-ede7-4317-8b5c-b9c0422700c6" shortcut="vrEi" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2204bce5-ac9a-45ad-8763-c96403fa3537" shortcut="vrEm" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81979720-0d5f-48c1-9b04-ebf40e3c8441" shortcut="vrEs" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="baac3d5c-049d-4213-a3cb-b99c34b9e386" shortcut="vrEt" description="" text="private readonly System.Collections.Generic.IEnumerable&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="444875a7-be97-498f-8fab-0b906a8b7246" shortcut="vrL" description="" text="private readonly System.Collections.Generic.List&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dee92ee-ec39-4393-b4b8-655df0ea1890" shortcut="vrLb" description="" text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b93d720b-f403-4832-bab7-e892c86fa53d" shortcut="vrLby" description="" text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e3518bb-ad64-48c3-839d-7131136dd6cf" shortcut="vrLdt" description="" text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64a15878-e63b-459c-b0ec-43af6b732d65" shortcut="vrLf" description="" text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83288aac-e0a6-44b8-90eb-1552a84dd8e8" shortcut="vrLg" description="" text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8233b801-670a-4765-84e7-1a32e5786323" shortcut="vrLi" description="" text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49612e2e-1612-495f-a73b-847ccc7cd843" shortcut="vrLm" description="" text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57079d7f-dcb2-4132-916a-4be42ea1bab9" shortcut="vrLs" description="" text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fcd7f191-3de2-4c9b-863a-b874b2541b67" shortcut="vrLt" description="" text="private readonly System.Collections.Generic.List&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="735c557f-52dc-4c0a-9e5e-b8bb4a27fc4a" shortcut="vrR" description="" text="private readonly $TYPE$[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f07f68a-b8a4-4f98-8456-d3d812b23442" shortcut="vrRb" description="" text="private readonly bool[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd6d22b5-6458-42cf-a768-4f131321abf9" shortcut="vrRby" description="" text="private readonly byte[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7914a2e-e3e4-4ff2-8922-05d9975b5fbc" shortcut="vrRdt" description="" text="private readonly System.DateTime[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b911937-0964-42fc-b85b-d42dc72b232d" shortcut="vrRf" description="" text="private readonly float[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3f6a1a7-b0b8-4d1d-84f3-09d58859a5f0" shortcut="vrRg" description="" text="private readonly System.Guid[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd3f7da1-55cb-48d6-932a-dfc4298178e5" shortcut="vrRi" description="" text="private readonly int[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f8c403c-cfbc-4839-9bb6-673e23e20ddc" shortcut="vrRm" description="" text="private readonly decimal[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cad8976b-ec59-4dc0-99b0-78da29c2b3a1" shortcut="vrRs" description="" text="private readonly string[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6b4f1fa4-54ee-4b11-a53d-0e2b2a699965" shortcut="vrRt" description="" text="private readonly System.Threading.Tasks.Task[] $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00cbb2a8-d453-4dea-aa08-db1749b124e4" shortcut="vrT" description="" text="private readonly System.Threading.Tasks.Task&lt;$TYPE$&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="TYPE" expression="constant(&quot;T&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="05b1d2df-c421-401f-abc7-5990cd814d5c" shortcut="vrTb" description="" text="private readonly System.Threading.Tasks.Task&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0518bb22-8aa7-4fd1-b0e9-a3d84ea56406" shortcut="vrTby" description="" text="private readonly System.Threading.Tasks.Task&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c797d8b-1745-40f1-927f-b9adb6cc958e" shortcut="vrTdt" description="" text="private readonly System.Threading.Tasks.Task&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4661d07-dc58-4147-8e0c-46560d959412" shortcut="vrTf" description="" text="private readonly System.Threading.Tasks.Task&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5cf7760-954f-422d-9967-1337ee8b6d91" shortcut="vrTg" description="" text="private readonly System.Threading.Tasks.Task&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ed88792-e963-4023-b7e5-36987adba5c2" shortcut="vrTi" description="" text="private readonly System.Threading.Tasks.Task&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30513356-40e7-47c1-8246-8379d1b82d03" shortcut="vrTm" description="" text="private readonly System.Threading.Tasks.Task&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98b03980-934e-4198-81a4-2d63c495ac93" shortcut="vrTs" description="" text="private readonly System.Threading.Tasks.Task&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dab24517-89a8-4442-ab81-53e23e605284" shortcut="vrTt" description="" text="private readonly System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8031877f-0edb-437f-85e0-b2439fd82ed3" shortcut="vrb" description="" text="private readonly bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="206b6e93-a03f-40d3-94d6-7dad9218ceff" shortcut="vrby" description="" text="private readonly byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72c93b81-cfc4-448c-9084-d1dbe9eacc5a" shortcut="vrdt" description="" text="private readonly System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="775abcc5-fd12-40ac-9505-8bd5ea8afc41" shortcut="vrf" description="" text="private readonly float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e5f67a5-ddb1-46f7-b186-e89a84ec0777" shortcut="vrg" description="" text="private readonly System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a504676d-ae1b-41db-aa33-2583613806c3" shortcut="vri" description="" text="private readonly int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b107099-1852-4b4b-95d3-48c1ddb36337" shortcut="vrm" description="" text="private readonly decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5a9dc368-49d2-49a9-8cec-9a2098750fa6" shortcut="vrs" description="" text="private readonly string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a2669ab-5a4e-4c07-abca-0b2127122779" shortcut="vrt" description="" text="private readonly System.Threading.Tasks.Task $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94f8d124-1c9f-47cf-8d91-84291a2bae6c" shortcut="vs" description="" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d4babda-413d-449f-87fa-83dd4f0aba56" shortcut="vt" description="" text="private System.Threading.Tasks.Task $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;myValue&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>